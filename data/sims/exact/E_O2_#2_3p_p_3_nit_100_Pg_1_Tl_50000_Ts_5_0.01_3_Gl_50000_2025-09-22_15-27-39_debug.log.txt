[Debug] Main.SimulatedAnnealing:[447] | Simulated Annealing Initialization Function
[Debug] Main.SimulatedAnnealing:[414] | Partitioned jobs in 1 groups
[Debug] Main.SimulatedAnnealing:[30 ] |  Optimization model builder 
[Debug] Main.SimulatedAnnealing:[81 ] | Model built
[Debug] Main.SimulatedAnnealing:[100] | Solver for Instance:  Dict{Symbol, Any}(:α => 1, :o => Any[1, 1, 1, 2, 1, 1, 1, 1], :p => 3, :n => Any[215, 463, 970, 1240, 842, 342, 147, 99], :g => Any[1, 2, 3, 4, 5, 6, 7, 8], :β => 3) 
[Debug] Main.SimulatedAnnealing:[125] | ("  objective value = ", 1468.0)
[Debug] Main.SimulatedAnnealing:[128] | ("  m value = ", 8.0)
[Debug] Main.SimulatedAnnealing:[163] | Solver done
[Debug] Main.SimulatedAnnealing:[224] |  Instance solved and stored
[Debug] Main.SimulatedAnnealing:[263] | Solution Summary 1×9 DataFrame
 Row │ α    β    p    m    cost    cost_p  stime    MiB     status
     │ Any  Any  Any  Any  Any     Any     Any      Any     Any
─────┼──────────────────────────────────────────────────────────────
   1 │ 1    3    3    8.0  1468.0  1366.0  1053.88  1967.0  OPTIMAL
[Debug] Main.SimulatedAnnealing:[468] | Instances  Any[Dict{Symbol, Any}(:α => 1, :o => Any[1, 1, 1, 2, 1, 1, 1, 1], :p => 3, :n => Any[215, 463, 970, 1240, 842, 342, 147, 99], :g => Any[1, 2, 3, 4, 5, 6, 7, 8], :β => 3)]
[Debug] Main.SimulatedAnnealing:[472] | Instance permutation 1
[Debug] Main.SimulatedAnnealing:[473] | Any[Dict{Symbol, Any}(:m => 8.0, :Dxf => 9×9 DataFrame
 Row │ Job1,1   Job2,1   Job3,1   Job4,1   Job4,2   Job5,1   Job6,1   Job7,1   Job8,1
     │ Float64  Float64  Float64  Float64  Float64  Float64  Float64  Float64  Float64
─────┼─────────────────────────────────────────────────────────────────────────────────
   1 │     0.0      1.0      1.0      0.0      0.0      0.0      0.0      1.0      0.0
   2 │     0.0      1.0      1.0      0.0      0.0      0.0      0.0      0.0      0.0
   3 │     0.0      1.0      1.0      0.0      0.0      1.0      0.0      0.0      0.0
   4 │     0.0      0.0      1.0      1.0      0.0      1.0      0.0      0.0      0.0
   5 │     1.0      0.0      0.0      1.0      0.0      1.0      0.0      0.0      0.0
   6 │     1.0      0.0      0.0      1.0      0.0      0.0      1.0      0.0      0.0
   7 │     0.0      0.0      0.0      1.0      1.0      0.0      1.0      0.0      0.0
   8 │     0.0      0.0      0.0      1.0      1.0      0.0      0.0      0.0      1.0
   9 │     0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0, :Dtf => 9×9 DataFrame
 Row │ Job1,1   Job2,1   Job3,1   Job4,1   Job4,2   Job5,1   Job6,1   Job7,1   Job8,1
     │ Float64  Float64  Float64  Float64  Float64  Float64  Float64  Float64  Float64
─────┼─────────────────────────────────────────────────────────────────────────────────
   1 │     0.0    147.0    147.0      0.0      0.0      0.0      0.0    147.0      0.0
   2 │     0.0     14.0     14.0      0.0      0.0      0.0      0.0      0.0      0.0
   3 │     0.0    302.0    302.0      0.0      0.0    302.0      0.0      0.0      0.0
   4 │     0.0      0.0    507.0    507.0      0.0    507.0      0.0      0.0      0.0
   5 │    33.0      0.0      0.0     33.0      0.0     33.0      0.0      0.0      0.0
   6 │   182.0      0.0      0.0    182.0      0.0      0.0    182.0      0.0      0.0
   7 │     0.0      0.0      0.0    160.0    160.0      0.0    160.0      0.0      0.0
   8 │     0.0      0.0      0.0     99.0     99.0      0.0      0.0      0.0     99.0
   9 │     0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0, :Idxs => [(1, 1), (2, 1), (3, 1), (4, 1), (4, 2), (5, 1), (6, 1), (7, 1), (8, 1)])]
